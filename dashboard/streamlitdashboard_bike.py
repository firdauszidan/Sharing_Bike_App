# -*- coding: utf-8 -*-
"""StreamlitDashboard_Bike.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Mqwo7-NdZMfu-iEa5VB3xJ0ruKmqucz_
"""

# import library
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import streamlit as st
sns.set_theme(style='white')

def create_weathermax(df):
    weathersit_max = df.groupby(by="weathersit_d").agg({
    "cnt_d": "max",
    })
    return weathersit_max

def create_holidaymax(df):
    holiday_max = df.groupby(by="holiday_d").agg({
    "cnt_d": "max",
    })
    return holiday_max

def create_reghour(df):
    reg_hour = df.groupby(by="hr").agg({
    "registered_h": "mean",
    })
    return reg_hour

all_df = pd.read_csv("dffix_clean.csv")

weathersit_max = create_weathermax(all_df)
holiday_max = create_holidaymax(all_df)
reg_hour = create_reghour(all_df)

st.title("Dashboard: Bike Sharing")

st.subheader("The Impact of Weather on the Number of Bicycles Borrowed")

col1, col2, col3= st.columns(3)
with col1:
    st.metric(label="Light", value=weathersit_max.cnt_d[1].max())
with col2:
    st.metric(label="Cloudy & Mist", value=weathersit_max.cnt_d[2].max())
with col3:
    st.metric(label="Light Rain", value=weathersit_max.cnt_d[3].max())

fig = plt.figure(figsize=(10, 8))
colors = ["#4381C1", "#8097D6", "#9FA2E0"]
sns.barplot(
    y="weathersit_d",
    x="cnt_d",
    orient="h",
    data=weathersit_max,
    palette=colors
)
plt.xlabel("Number of bicycles borrowed")
plt.ylabel("Wheather Situation")
plt.title("The Impact of Weather on the Number of Bicycles Borrowed")
plt.yticks([0, 1, 2], ["Light", "Cloudy & Mist", "Light Rain"])
st.pyplot(fig)

st.subheader("Max Volume of Bikes Borrowed Between Weekdays and Holidays")

col1, col2 = st.columns(2)
with col1:
    st.metric(label="Weekdays", value=holiday_max.cnt_d[0].mean())
with col2:
    st.metric(label="Holidays", value=holiday_max.cnt_d[1].mean())

fig = plt.figure(figsize=(10, 7))
colors = ["#B18D9A", "#BEA2C2"]
sns.barplot(
    x="holiday_d",
    y="cnt_d",
    data=holiday_max,
    palette=colors
)
plt.xlabel("Day")
plt.ylabel("Number of bicycles borrowed")
plt.title("Max Volume of Bikes Borrowed Between Weekdays and Holidays")
plt.xticks([0, 1], ["Weekdays", "Holidays"])
st.pyplot(fig)

st.subheader("Average registered bicycle users per hour")

fig = plt.figure(figsize=(8, 5.5))
colors = ["#B9C244"]
sns.barplot(
    x="hr",
    y="registered_h",
    data=reg_hour,
    hue="hr",
    palette=colors*24,
    legend=False
)
plt.xlabel("Hours")
plt.ylabel("Number of registered users")
plt.title("Average registered bicycle users per hour")
st.pyplot(fig)